server:
  port: 50004
eureka:
  client:
    service-url:
      defaultZone: http://admin:admin@localhost:8761/eureka/
spring:
  application:
    name: authorization-server
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://139.196.160.33:3306/sc_auth?characterEncoding=UTF-8&useUnicode=true&useSSL=false&serverTimezone=GMT
    username: root
    password: 123456
  #redis config
  redis:
    host: localhost
    port: 6379
    jedis:
      pool:
        max-active: 8
        max-idle: 8
        min-idle: 0
    timeout: 100ms

  cloud:
    loadbalancer:
      retry:
        enabled: true
    #开启跟踪总线事件
    bus:
      trace:
        enabled: true

  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

  #kafka config
#  kafka:
#    bootstrap-servers: 139.196.160.33:9092
#    consumer:
#      #Kafka中没有初始偏移,或者，如果当前偏移在服务器上不再存在时,默认取最新 ，有三个选项 {latest, earliest, none}
#      auto-offset-reset: latest
#      #是否开启自动提交
#      enable-auto-commit: true
#      #自动提交的时间间隔
#      auto-commit-interval: 100
#      #key的解码方式
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      #value的解码方式
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      group-id: test-consumer-group

  #jwt的密钥
  security:
    oauth2:
      jwt:
        signingKey: 123456

#使用redis存储roken需要设置的参数
#security:
#  oauth2:
#    client:
#      client-id: client
#      client-secret: secret
#      user-authorization-uri: http://localhost:50003/oauth/authorize  #授权码认证方式需要的
#      access-token-uri: http://localhost:50003/oauth/token  #密码模式需要用到的获取 token 的接口
#    resource:
#      id: client
#      user-info-uri: secret
#    authorization:
#      check-token-access: http://localhost:50003/oauth/check_token


management:
  endpoints:
    web:
      exposure:
        include: '*'
ribbon:
  eureka:
    enabled: true
