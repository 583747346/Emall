server:
  port: 40005
eureka:
  client:
    service-url:
      defaultZone: http://admin:admin@localhost:8761/eureka/
spring:
  application:
    name: gateway-web
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://139.196.160.33:3306/sc_gateway?autoReconnect=true&useSSL=false&useUnicode=true&characterEncoding=utf8
    username: root
    password: 123456
    hikari:
      maximum-pool-size: 50
      minimum-idle: 5
  cloud:
    gateway:
      default-filters:
        - name: Retry
          args:
            retries: 3
            statuses: BAD_GATEWAY
        - AddResponseHeader=X-Response-Default-Foo, Default-Bar
        - name: RequestRateLimiter    #不能够改变，局部过滤器，使用默认的factory
          args:
            #springcloud gateway不支持mysql等数据库进行背压，目前可以Redis-reactive进行背压

            #每秒允许请求数
            redis-rate-limiter.replenishRate: 2
            #允许并发的请求数[请求宽限的个数]
            redis-rate-limiter.burstCapacity: 10
            rate-limiter: "#{@defaultRedisRateLimiter}"
            #用户唯一身份识别
            key-resolver: "#{@apiKeyResolver}"
    loadbalancer:
      retry:
        enabled: true

  redis:
    host: localhost
    port: 6379
  #jwt密码
  security:
    oauth2:
      jwt:
        signingKey: 123456

  rabbitmq:
    host: localhost
    port: 5672
    username: admin
    password: admin
  #kafka config
#  kafka:
#    bootstrap-servers: 139.196.160.33:9092
#    consumer:
#      #Kafka中没有初始偏移,或者，如果当前偏移在服务器上不再存在时,默认取最新 ，有三个选项 {latest, earliest, none}
#      auto-offset-reset: latest
#      #是否开启自动提交
#      enable-auto-commit: true
#      #自动提交的时间间隔
#      auto-commit-interval: 100
#      #key的解码方式
#      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      #value的解码方式
#      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
#      group-id: test-consumer-group

ribbon:
  eureka:
    enabled: true

jetcache:
  statIntervalMinutes: 1
  areaInCacheName: false
  hidePackages: com.emall.gatewayweb
  local:
    # 默认永久本地缓存
    default:
      type: caffeine
      keyConvertor: fastjson
  remote:
    # 默认永久的远程缓存
    default:
      type: redis
      keyConvertor: fastjson
      valueEncoder: kryo
      valueDecoder: kryo
      poolConfig:
        minIdle: 5
        maxIdle: 20
        maxTotal: 50
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
gate:
  ignore:
    authentication:
      startWith: /oauth, /v2/api-docs

management:
  endpoints:
    web:
      exposure:
        include: '*'

logging:
  level:
    com.springboot.cloud: debug
    com.jalja.org.spring: debug
  path: logs/
  file:
    max-size: 1GB