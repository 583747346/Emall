server:
  port: 50001
eureka:
  client:
    service-url:
      defaultZone: http://admin:admin@localhost:8761/eureka/

spring:
  application:
    name: emall-manageplat
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://139.196.160.33:3306/emall_manageplat?autoReconnect=true&useSSL=false&useUnicode=true&characterEncoding=utf8
    username: root
    password: 123456

  cloud:
    bus:
      trace:
        enabled: true
    loadbalancer:
      ribbon:
        enabled: false

  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest
    publisher-returns: true

  #kafka config
  #  kafka:
  #    bootstrap-servers: 139.196.160.33:9092
  #    producer:
  #      #每批次发送消息的数量
  #      batch-size: 0
  #      #设置大于0的值将使客户端重新发送任何数据，一旦这些数据发送失败。注意，这些重试与客户端接收到发送错误时的重试没有什么不同。
  #      #允许重试将潜在的改变数据的顺序，如果这两个消息记录都是发送到同一个partition，
  #      #则第一个消息失败第二个发送成功，则第二条消息会比第一条消息出现要早。
  #      retries: 0
  #      #producer可以用来缓存数据的内存大小。如果数据产生速度大于向broker发送的速度，producer会阻塞或者抛出异常,以“block.on.buffer.full”来表明。
  #      #这项设置将和producer能够使用的总内存相关，但并不是一个硬性的限制，因为不是producer使用的所有内存都是用于缓存。一些额外的内存会用于压缩（如果引入压缩机制），同样还有一些用于维护请求。
  #      buffer-memory: 33554432
  #      #key与value序列化
  #      key-serializer: org.apache.kafka.common.serialization.StringSerializer
  #      value-serializer: org.apache.kafka.common.serialization.StringSerializer


  redis:
    host: localhost
    port: 6379
    lettuce:
      pool:
        max-active: 200
  data:
    elasticsearch:
      cluster-nodes: 127.0.0.1:9300
      cluster-name: elasticsearch
      repositories:
        enabled: true


jetcahe:
  statIntervalMinutes: 15
  areaInCacheName: false
  hidePackages: com.emall.emallmanageplat
  local:
    # 默认2小时本地缓存
    default:
      type: caffeine
      keyConvertor: fastjson
      expireAfterWriteInMillis: 3600000
      expireAfterAccessInMillis: 1800000
    # 长时本地缓存，主要用于要求时效一般
    longTime:
      type: caffeine
      keyConvertor: fastjson
      expireAfterWriteInMillis: 300000
      expireAfterAccessInMillis: 180000
    # 短时本地缓存，主要用于要求时效较高的配置
    shortTime:
      type: caffeine
      keyConvertor: fastjson
      expireAfterWriteInMillis: 60000
      expireAfterAccessInMillis: 40000

  remote:
    # 默认2小时的远程缓存
    default:
      type: redis
      expireAfterWriteInMillis: 43200000
      keyConvertor: fastjson
      valueEncoder: kryo
      valueDecoder: kryo
      poolConfig:
        minIdle: 5
        maxIdle: 20
        maxTotal: 50
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
    # 长时远程缓存，主要用于要求时效要求一般的集中式缓存
    longTime:
      type: redis
      expireAfterWriteInMillis: 7200000
      keyConvertor: fastjson
      valueEncoder: kryo
      valueDecoder: kryo
      poolConfig:
        minIdle: 5
        maxIdle: 20
        maxTotal: 50
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
    # 短时远程缓存，主要用于要求时效较高的集中式缓存
    shortTime:
      type: redis
      expireAfterWriteInMillis: 300000
      keyConvertor: fastjson
      valueEncoder: kryo
      valueDecoder: kryo
      poolConfig:
        minIdle: 5
        maxIdle: 20
        maxTotal: 50
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}


#OSS对象存储
oss:
  endpoint: http://oss-cn-shanghai.aliyuncs.com
  accessKeyId: LTAI4GB8SUsXPTkEHqztvukx
  accessKeySecret: ARYltjlZhm1a5xIxVY6GalLS9pkGki
  bucketName: emall-oss-file

management:
  endpoints:
    web:
      exposure:
        include: '*'

logging:
  level:
    com.emall.emallmanageplat: TRACE
    java.sql.PreparedStatement: debug

mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true